impl Serialize for TYPENAME {
    fn serialize<S>(&self, serializer: S) -> std::result::Result<S::Ok, S::Error>
        where
            S: Serializer,
    {
        let bytes = serialize_ffi::<TYPENAME>(&self);
        bytes.serialize(serializer)
    }
}

impl<'de> Deserialize<'de> for TYPENAME {
    fn deserialize<D>(deserializer: D) -> std::result::Result<Self, D::Error>
        where
            D: Deserializer<'de>,
    {
        let v: ByteBuf = ByteBuf::deserialize::<D>(deserializer)?;
        Ok(deserialize_ffi::<TYPENAME>(v))
    }
}
